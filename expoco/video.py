# AUTOGENERATED! DO NOT EDIT! File to edit: 40_video.ipynb (unless otherwise specified).

__all__ = ['video_capture_session']

# Cell
import cv2, datetime, time
from pathlib import Path
from .screen import *
from .pointer import *
from .keyboard import *

# Cell
def video_capture_session(keyboard):
    now = datetime.datetime.utcnow().strftime('%Y%m%d%H%M%S')
    path = Path(f'data/capture_session_{now}')
    path.mkdir(parents=True, exist_ok=True)

    video_capture = cv2.VideoCapture(0)
    try:
        width, height = [int(video_capture.get(p)) for p in [cv2.CAP_PROP_FRAME_WIDTH, cv2.CAP_PROP_FRAME_HEIGHT]]
        assert width >= height
        trim_width = (width-height)//2
        screen_size = new_windows_screen().get_screen_size()
        pointer = new_windows_pointer()
        pointer.random_move_to(screen_size)
        print('Ready: screen_size', screen_size)

        def _after_key_press(character):
            retval, image = video_capture.read()
            if retval:
                # resize to square
                image = image[:, trim_width:-trim_width]
                now = datetime.datetime.utcnow().strftime('%Y%m%d%H%M%S')
#                 assert cv2.imwrite(str(path/f'{now}.png'), image[:, trim_width:-trim_width])
                x,y = pointer.get_position()
                assert cv2.imwrite(str(path/f'{now}_{x}_{y}_{character}.png'), image)
                pointer.random_move_to(screen_size)
            else:
                print('Nothing read from video capture')

        keyboard.after_key_press(_after_key_press)

    finally:
        video_capture.release()