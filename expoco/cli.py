# AUTOGENERATED! DO NOT EDIT! File to edit: 70_cli.ipynb (unless otherwise specified).

__all__ = ['capture_session', 'viseme_capture_session']

# Cell
from .core import *
from .camera_capture import capture_session as _capture_session
# from expoco.face_mesh.capture_session import dry_run as _dry_run # TODO: move sry run to camera_capture
# from expoco.ml.data import viseme_dataset_from_capture_sessions as _viseme_dataset_from_capture_sessions
# from expoco.ml.data import processed_dataset_from_viseme_dataset as _processed_dataset_from_viseme_dataset
# from expoco.gui.main import run_main as _run_main
from fastcore.script import *
import cv2

# Cell
@call_parse
def capture_session(classes:Param('Space separated list of classes', str),
                    stop_after:Param('Number of images to capture', int),
                    comments:Param('Any comments that might help use data in this session', str)):
    path = _capture_session(classes, stop_after, comments)
    print('Capture session path', path)

# Cell
@call_parse
def viseme_capture_session(stop_after:Param('Number of images to capture', int),
                           comments:Param('Any comments that might help use data in this session', str)):
    "Runs a suite of capture sessions to collect images that could be used to classify visemes"
    window_name = 'expoco: Capture session'
    for k, v in dict(
            center_box=[(1280-640)//2, (720-480)//2],
            top_left_box=[0, 0],
            top_right_box=[1280-640, 0],
            bottom_right_box=[1280-640, 720-480],
            bottom_left_box=[0, 720-480]).items():
        cv2.namedWindow(window_name)
        cv2.moveWindow(window_name, *v)
        for c in ['NO_EXPRESSION', 'OO', 'EE', 'AH', 'RANDOM_TALK']:
            path = _capture_session(c, stop_after, f'{k} {comments}')
            print('Capture session path', path)