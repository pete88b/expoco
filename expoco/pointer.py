# AUTOGENERATED! DO NOT EDIT! File to edit: 20_pointer.ipynb (unless otherwise specified).

__all__ = ['PointerABC', 'new_windows_pointer']

# Cell
import random
from abc import ABC,abstractmethod

# Cell
class PointerABC(ABC):
    @abstractmethod
    def move_to(self, point):
        "Move the pointer to `point`"

    @abstractmethod
    def get_position(self):
        "Return the position of the pointer"

    def random_move_to(self, screen_size):
        point = [random.randint(0, i) for i in screen_size]
        self.move_to(point)
        return point

# Cell
def new_windows_pointer():
    import win32api
    class WindowsPointer(PointerABC):
        def move_to(self, point):
            win32api.SetCursorPos(point)
        def get_position(self):
            return win32api.GetCursorPos()
    return WindowsPointer()